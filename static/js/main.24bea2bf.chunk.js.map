{"version":3,"sources":["assets/octocat.png","assets/job-logo.svg","components/header/Header.js","assets/loading.gif","assets/404.png","components/job/Job.js","components/form/Form.js","assets/design.svg","components/footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","octocat","alt","joblogo","Job","data","company_logo","title","split","map","word","index","slice","company_and_location","type","href","apply","rel","target","Form","useState","jobs","setJobs","description","setDescription","location","setLocation","gif","setGif","err","setErr","action","method","value","onChange","e","placeholder","onClick","axios","get","then","response","status","Error","job","company","how_to_apply","catch","erro","console","log","loading","length","error","Footer","String","design","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24bea2bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/octocat.237e2214.png\";","export default __webpack_public_path__ + \"static/media/job-logo.bb022661.svg\";","import octocat from \"../../assets/octocat.png\";\nimport joblogo from \"../../assets/job-logo.svg\";\nimport \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"Header\">\n      <div className=\"logos\">\n        <img src={octocat} alt=\"GitHub Logo\" className=\"github-logo\"/>\n        <img src={joblogo} alt=\"Job Logo\" className=\"job-logo\"/>\n      </div>\n      <h1><span>G</span>ITHUB <span>J</span>OB <span>F</span>INDER</h1>\n    </div>\n  )\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/loading.11562bdd.gif\";","export default __webpack_public_path__ + \"static/media/404.ed881872.png\";","import \"./Job.css\";\n\nconst Job = ({ data }) => {\n  return (\n    <div className=\"Job card border border-success rounded w-50 my-5 text-uppercase\">\n      {data.company_logo !== \"null\" ? (\n        <img\n          src={data.company_logo}\n          alt=\"Company Logo\"\n          className=\"company-logo card-img-top py-3\"\n        />\n      ) : (\n        <div className=\"no-company_logo py-5\"></div>\n      )}\n      <div className=\"job-info border border-success\">\n        <h2 className=\"title card-header text-danger\">\n          {data.title.split(\" \").map((word, index) => (\n            <span key={`word${index}`}>\n              <span className=\"title-initial\">{word[0]}</span>\n              {word.slice(1)}{\" \"}\n            </span>\n          ))}\n        </h2>\n        <div className=\"card-body\">\n          <p className=\"company-and-location fw-bold\">\n            {data.company_and_location.split(\" \").map((word, index) => (\n              <span key={`word${index}`}>\n                <span className=\"cl-initial\">{word[0]}</span>\n                {word.slice(1)}{\" \"}\n              </span>\n            ))}\n          </p>\n          <p className=\"job-type\">\n            {data.type.split(\" \").map((word, index) => (\n              <span key={`word${index}`}>\n                <span className=\"type-initial\">{word[0]}</span>\n                {word.slice(1)}{\" \"}\n              </span>\n            ))}\n          </p>\n          <a\n            className=\"job-apply btn btn-success text-white w-50\"\n            href={data.apply\n              .split(\"href=\")[1]\n              .split(\">\")[0]\n              .slice(1, -1)}\n            rel=\"noreferrer\"\n            target=\"_blank\"\n          >\n            APPLY\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Job;\n","import \"./Form.css\";\nimport loading from \"../../assets/loading.gif\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport error from \"../../assets/404.png\";\nimport Job from \"../job/Job\";\n\nconst Form = () => {\n  const [jobs, setJobs] = useState();\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [gif, setGif] = useState(false);\n  const [err, setErr] = useState(false);\n\n  const getDescription = e => {\n    setDescription(e.target.value);\n  };\n\n  const getLocation = e => {\n    setLocation(e.target.value);\n  };\n\n  const findJobs = () => {\n    setGif(true);\n\n    axios\n      .get(`https://jobs.github.com/positions.json?description=${description}&location=${location}`)\n      .then(response => {\n        if (response.status === 404)\n          throw new Error(`Something went wrong : ${response.status}`);\n        return response.data.map(job => ({\n          company_logo: `${job.company_logo}`,\n          title: `${job.title}`,\n          company_and_location: `${job.company}-${job.location}`,\n          type: `${job.type}`,\n          apply: `${job.how_to_apply}`,\n        }));\n      })\n      .then(jobs => {\n        setGif(false);\n        setJobs(jobs);\n      })\n      .catch(erro => {\n        console.log(erro);\n        setGif(false);\n        setErr(true);\n      });\n  };\n\n  return (\n    <div className=\"Form\">\n      <form action=\"/\" method=\"get\" className=\"container\">\n        <div className=\"description\">\n          <input\n            className=\"description__input\"\n            type=\"text\"\n            value={description}\n            onChange={getDescription}\n            placeholder=\"DESCRIPTION\"\n          />\n        </div>\n        <div className=\"location\">\n          <input\n            className=\"location__input\"\n            type=\"text\"\n            value={location}\n            onChange={getLocation}\n            placeholder=\"LOCATION\"\n          />\n        </div>\n        <button className=\"search\" type=\"button\" onClick={findJobs}>\n          search\n        </button>\n      </form>\n      {gif && (\n        <img\n          src={loading}\n          alt=\"Loading Gif\"\n          className=\"loading-gif w-25 mx-auto\"\n        />\n      )}\n      {jobs?.map((job, index) => (\n        <Job key={`job${index}`} data={job} />\n      ))}\n      {jobs?.length === 0 && (\n        <img src={error} alt=\"404 Error\" className=\"404-error w-50 mx-auto\" />\n      )}\n      {err && (\n        <img src={error} alt=\"404 Error\" className=\"404-error w-50 mx-auto\" />\n      )}\n    </div>\n  );\n};\n\nexport default Form;\n","export default __webpack_public_path__ + \"static/media/design.9f215bce.svg\";","import design from \"../../assets/design.svg\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  return (\n    <div className=\"Footer\">\n      <div className=\"wrapper\">\n        <span className=\"wrapper__designer\">\n          <em>{String(`<ata/>`)}</em>\n        </span>\n        <img src={design} alt=\"Design Icon\" className=\"wrapper__icon\" />\n        <span className=\"wrapper__design\">design</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import \"./App.css\";\nimport Header from \"./components/header/Header\";\nimport Form from \"./components/form/Form\";\nimport Footer from \"./components/footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Form />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}